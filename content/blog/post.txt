### Choosing a Static Website Generator {#intro}

Even though I have been using RStudio IDE regularly, I didn't initially resort to the `blogdown` package but decided to test [Jekyll](https://jekyllrb.com/) out, which is the generator for pages that use the .github.io domain.  There was really no preference for a particular generator for me since I was new to the process, but Jekyll seemed popular (this is likely because it came out earlier than most other static website generators) and has a compelling [showcase](https://jekyllrb.com/showcase/). Using Jekyll requires a [Ruby development environment](https://jekyllrb.com/docs/installation/) and subsequent [bundler gems](https://jekyllrb.com/docs/ruby-101/), an [editor](https://github.com/planetjekyll/awesome-jekyll-editors) and  [git](https://git-scm.com/downloads). In retrospect, I'd say the best route in choosing a generator as a beginner is to pick one that uses an environment you're familiar with. Creating a static generated website is different than the statistical programming R is typically used for, so to work through the site components along with some front-end elements is already a bit of a learning curve that can get even more confusing in an entirely new environment, as it was in my case. 

I started fresh with `blogdown`.  The great thing about using `blogdown` as an already R user is that you don't need to go through the typical Hugo installation process of manually installing [Hugo](https://gohugo.io/getting-started/installing) and a [package manager]() to get started. All you need to do is to install `blogdown` from CRAN like you would for any other package using the `install.packages("blogdown")` command and then install Hugo using the `install_hugo()` function. You can read more about the installation process from this chapter in the [Blogdown book](https://bookdown.org/yihui/blogdown/installation.html). 

While creating this site, I also came across resources for  [GatsbyJS](https://www.gatsbyjs.org/), which is another popular static website generator. Most of my experience creating a website is limited to Hugo, so if you are interested in knowing more about the specifications of these generators and how they compare, you can [read here](https://dzone.com/articles/static-site-generators-overview-gatsby-vs-hugo-vs) to learn more. 


### References


[The Blogdown Book](https://bookdown.org/yihui/blogdown/), created by the developers of the package, is a thorough and easy to follow reference with helpful guidance on creating a personal website. [Hugo's documentation](https://gohugo.io/documentation/) is also good to refer to, especially if you want to further customize your page beyond your theme's default. I will be referring to these two resources often in the sections detailing the site build. 

### Prerequisites {#prereqs}

The following are the basic components needed to create and deploy a static website:  

1.  [Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git) installed on your machine and a git repository host like [GitHub](www.github.com), [GitLab](https://about.gitlab.com/) or [Bitbucket](https://bitbucket.org/product). 

2. [R](https://www.r-project.org/) and [RStudio](https://rstudio.com/products/rstudio/download/) if you plan to use `blogdown` or a [source code editor](https://guide.freecodecamp.org/tools/source-code-editors/) if you plan to make your website outside of R.
<i>Note: If you plan to develop your website outside of R, then 
you need to [install Hugo](https://gohugo.io/getting-started/installing/) (alternatively, if you're interested in using Jekyll, you can read the documentation [here](https://jekyllrb.com/docs/))</i>

3. [A Hugo theme](https://themes.gohugo.io/). You can create a new [theme](https://gohugo.io/commands/hugo_new_theme/) if you're using Hugo outside of `blogdown`, but to my knowledge I don't think you create a site and theme together from scratch with blogdown. 

4. [A Netlify account](https://www.netlify.com/). Netlify deploys your website using your Github/GitLab/Bitbucket repository. 


You can get an idea of the workflow from this [chapter of blogdown](https://bookdown.org/yihui/blogdown/workflow.html).

### Building The Site 

#### Set Up a Git Repository

There are two ways to get started with your project: 
  <p>Either you can create a new Github repository first. Initialize the repository with a README (you can just write something short in it like "My Website"). Once you've created the repository, go to RStudio and select File <i class="fas fa-arrow-right"></i> New Project <i class="fas fa-arrow-right"></i> Version Control <i class="fas fa-arrow-right"></i> Git. You will then be prompted to put the name of the repository.</p>
  <p>Alternative, you can create a new directory in R by selecting File <i class="fas fa-arrow-right"></i> New Project <i class="fas fa-arrow-right"></i> New Directory <i class="fas fa-arrow-right"></i> New Project and check the "Create a git repository" box
  </p>
  <p><i>To read more about using R and version control, the following resources are helpful</i>:
<ul>
<li> [Using Version Control with R Studio](https://support.rstudio.com/hc/en-us/articles/200532077-Version-Control-with-Git-and-SVN)</li>
<li> [Happy Git and GitHub for the useR](https://happygitwithr.com/)</li>
<li>[Git's Reference Manual](https://git-scm.com/docs)</li>
</ul>
</p>

#### Installing the blogdown package

As mentioned [earlier](#intro) in the post, the `blogdown` package is available in CRAN and can be installed in the RStudio console using  `install.packages("blogdown")`. The `blogdown::install_hugo()` function then installs Hugo. 

#### Selecting a theme

I picked the [Hugo Imperfect Slim](https://themes.gohugo.io/hugo-future-imperfect-slim/) theme for this page because it has blog appearance that I was going for. The [Blogdown](https://bookdown.org/yihui/blogdown/other-themes.html#other-themes) book offers some guidance on picking a theme, emphasizing minimal is better. Hugo Imperfect Slim is honestly a bit clunky in that regard&mdash;the template has probably more going on than it needs to and there were some challenges with the CSS defaults to change the appearance of the theme. A spent a good amount of time customizing, which is probably not the most reccomended route to build a site, but I actually really learned to enjoy it and developed a good understanding of HTML, CSS and Javascript in the process. 

Once you figure out what theme you want to use, click on the "Homepage" button of the Hugo theme page. It should take you to the Github repository where you will see the name of the repo on the upper left corner. You will need this name when creating a new site with your theme using the `new_site()` function. The command I used to create my site was 

```
blogdown::new_site(theme = 'pacollins/hugo-future-imperfect-slim')

```
https://www.staticgen.com/
https://wsvincent.com/static-vs-dynamic-websites-pros-and-cons/
https://dzone.com/articles/6-reasons-why-you-should-go-for-a-static-website
https://devopedia.org/package-manager
#### Understanding The Pages 
